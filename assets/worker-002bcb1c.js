(function(){"use strict";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const k="154";function E(g,t,h){return Math.max(t,Math.min(h,g))}class A{constructor(t=0,h=0,s=0,n=1){this.isQuaternion=!0,this._x=t,this._y=h,this._z=s,this._w=n}static slerpFlat(t,h,s,n,i,u,o){let l=s[n+0],_=s[n+1],r=s[n+2],e=s[n+3];const x=i[u+0],a=i[u+1],y=i[u+2],c=i[u+3];if(o===0){t[h+0]=l,t[h+1]=_,t[h+2]=r,t[h+3]=e;return}if(o===1){t[h+0]=x,t[h+1]=a,t[h+2]=y,t[h+3]=c;return}if(e!==c||l!==x||_!==a||r!==y){let z=1-o;const d=l*x+_*a+r*y+e*c,C=d>=0?1:-1,p=1-d*d;if(p>Number.EPSILON){const M=Math.sqrt(p),m=Math.atan2(M,d*C);z=Math.sin(z*m)/M,o=Math.sin(o*m)/M}const w=o*C;if(l=l*z+x*w,_=_*z+a*w,r=r*z+y*w,e=e*z+c*w,z===1-o){const M=1/Math.sqrt(l*l+_*_+r*r+e*e);l*=M,_*=M,r*=M,e*=M}}t[h]=l,t[h+1]=_,t[h+2]=r,t[h+3]=e}static multiplyQuaternionsFlat(t,h,s,n,i,u){const o=s[n],l=s[n+1],_=s[n+2],r=s[n+3],e=i[u],x=i[u+1],a=i[u+2],y=i[u+3];return t[h]=o*y+r*e+l*a-_*x,t[h+1]=l*y+r*x+_*e-o*a,t[h+2]=_*y+r*a+o*x-l*e,t[h+3]=r*y-o*e-l*x-_*a,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,h,s,n){return this._x=t,this._y=h,this._z=s,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,h){const s=t._x,n=t._y,i=t._z,u=t._order,o=Math.cos,l=Math.sin,_=o(s/2),r=o(n/2),e=o(i/2),x=l(s/2),a=l(n/2),y=l(i/2);switch(u){case"XYZ":this._x=x*r*e+_*a*y,this._y=_*a*e-x*r*y,this._z=_*r*y+x*a*e,this._w=_*r*e-x*a*y;break;case"YXZ":this._x=x*r*e+_*a*y,this._y=_*a*e-x*r*y,this._z=_*r*y-x*a*e,this._w=_*r*e+x*a*y;break;case"ZXY":this._x=x*r*e-_*a*y,this._y=_*a*e+x*r*y,this._z=_*r*y+x*a*e,this._w=_*r*e-x*a*y;break;case"ZYX":this._x=x*r*e-_*a*y,this._y=_*a*e+x*r*y,this._z=_*r*y-x*a*e,this._w=_*r*e+x*a*y;break;case"YZX":this._x=x*r*e+_*a*y,this._y=_*a*e+x*r*y,this._z=_*r*y-x*a*e,this._w=_*r*e-x*a*y;break;case"XZY":this._x=x*r*e-_*a*y,this._y=_*a*e-x*r*y,this._z=_*r*y+x*a*e,this._w=_*r*e+x*a*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+u)}return h!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,h){const s=h/2,n=Math.sin(s);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(t){const h=t.elements,s=h[0],n=h[4],i=h[8],u=h[1],o=h[5],l=h[9],_=h[2],r=h[6],e=h[10],x=s+o+e;if(x>0){const a=.5/Math.sqrt(x+1);this._w=.25/a,this._x=(r-l)*a,this._y=(i-_)*a,this._z=(u-n)*a}else if(s>o&&s>e){const a=2*Math.sqrt(1+s-o-e);this._w=(r-l)/a,this._x=.25*a,this._y=(n+u)/a,this._z=(i+_)/a}else if(o>e){const a=2*Math.sqrt(1+o-s-e);this._w=(i-_)/a,this._x=(n+u)/a,this._y=.25*a,this._z=(l+r)/a}else{const a=2*Math.sqrt(1+e-s-o);this._w=(u-n)/a,this._x=(i+_)/a,this._y=(l+r)/a,this._z=.25*a}return this._onChangeCallback(),this}setFromUnitVectors(t,h){let s=t.dot(h)+1;return s<Number.EPSILON?(s=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=s):(this._x=0,this._y=-t.z,this._z=t.y,this._w=s)):(this._x=t.y*h.z-t.z*h.y,this._y=t.z*h.x-t.x*h.z,this._z=t.x*h.y-t.y*h.x,this._w=s),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(E(this.dot(t),-1,1)))}rotateTowards(t,h){const s=this.angleTo(t);if(s===0)return this;const n=Math.min(1,h/s);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,h){const s=t._x,n=t._y,i=t._z,u=t._w,o=h._x,l=h._y,_=h._z,r=h._w;return this._x=s*r+u*o+n*_-i*l,this._y=n*r+u*l+i*o-s*_,this._z=i*r+u*_+s*l-n*o,this._w=u*r-s*o-n*l-i*_,this._onChangeCallback(),this}slerp(t,h){if(h===0)return this;if(h===1)return this.copy(t);const s=this._x,n=this._y,i=this._z,u=this._w;let o=u*t._w+s*t._x+n*t._y+i*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=u,this._x=s,this._y=n,this._z=i,this;const l=1-o*o;if(l<=Number.EPSILON){const a=1-h;return this._w=a*u+h*this._w,this._x=a*s+h*this._x,this._y=a*n+h*this._y,this._z=a*i+h*this._z,this.normalize(),this._onChangeCallback(),this}const _=Math.sqrt(l),r=Math.atan2(_,o),e=Math.sin((1-h)*r)/_,x=Math.sin(h*r)/_;return this._w=u*e+this._w*x,this._x=s*e+this._x*x,this._y=n*e+this._y*x,this._z=i*e+this._z*x,this._onChangeCallback(),this}slerpQuaternions(t,h,s){return this.copy(t).slerp(h,s)}random(){const t=Math.random(),h=Math.sqrt(1-t),s=Math.sqrt(t),n=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(h*Math.cos(n),s*Math.sin(i),s*Math.cos(i),h*Math.sin(n))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,h=0){return this._x=t[h],this._y=t[h+1],this._z=t[h+2],this._w=t[h+3],this._onChangeCallback(),this}toArray(t=[],h=0){return t[h]=this._x,t[h+1]=this._y,t[h+2]=this._z,t[h+3]=this._w,t}fromBufferAttribute(t,h){return this._x=t.getX(h),this._y=t.getY(h),this._z=t.getZ(h),this._w=t.getW(h),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class S{constructor(t=0,h=0,s=0){S.prototype.isVector3=!0,this.x=t,this.y=h,this.z=s}set(t,h,s){return s===void 0&&(s=this.z),this.x=t,this.y=h,this.z=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,h){switch(t){case 0:this.x=h;break;case 1:this.y=h;break;case 2:this.z=h;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,h){return this.x=t.x+h.x,this.y=t.y+h.y,this.z=t.z+h.z,this}addScaledVector(t,h){return this.x+=t.x*h,this.y+=t.y*h,this.z+=t.z*h,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,h){return this.x=t.x-h.x,this.y=t.y-h.y,this.z=t.z-h.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,h){return this.x=t.x*h.x,this.y=t.y*h.y,this.z=t.z*h.z,this}applyEuler(t){return this.applyQuaternion(q.setFromEuler(t))}applyAxisAngle(t,h){return this.applyQuaternion(q.setFromAxisAngle(t,h))}applyMatrix3(t){const h=this.x,s=this.y,n=this.z,i=t.elements;return this.x=i[0]*h+i[3]*s+i[6]*n,this.y=i[1]*h+i[4]*s+i[7]*n,this.z=i[2]*h+i[5]*s+i[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const h=this.x,s=this.y,n=this.z,i=t.elements,u=1/(i[3]*h+i[7]*s+i[11]*n+i[15]);return this.x=(i[0]*h+i[4]*s+i[8]*n+i[12])*u,this.y=(i[1]*h+i[5]*s+i[9]*n+i[13])*u,this.z=(i[2]*h+i[6]*s+i[10]*n+i[14])*u,this}applyQuaternion(t){const h=this.x,s=this.y,n=this.z,i=t.x,u=t.y,o=t.z,l=t.w,_=l*h+u*n-o*s,r=l*s+o*h-i*n,e=l*n+i*s-u*h,x=-i*h-u*s-o*n;return this.x=_*l+x*-i+r*-o-e*-u,this.y=r*l+x*-u+e*-i-_*-o,this.z=e*l+x*-o+_*-u-r*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const h=this.x,s=this.y,n=this.z,i=t.elements;return this.x=i[0]*h+i[4]*s+i[8]*n,this.y=i[1]*h+i[5]*s+i[9]*n,this.z=i[2]*h+i[6]*s+i[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,h){return this.x=Math.max(t.x,Math.min(h.x,this.x)),this.y=Math.max(t.y,Math.min(h.y,this.y)),this.z=Math.max(t.z,Math.min(h.z,this.z)),this}clampScalar(t,h){return this.x=Math.max(t,Math.min(h,this.x)),this.y=Math.max(t,Math.min(h,this.y)),this.z=Math.max(t,Math.min(h,this.z)),this}clampLength(t,h){const s=this.length();return this.divideScalar(s||1).multiplyScalar(Math.max(t,Math.min(h,s)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,h){return this.x+=(t.x-this.x)*h,this.y+=(t.y-this.y)*h,this.z+=(t.z-this.z)*h,this}lerpVectors(t,h,s){return this.x=t.x+(h.x-t.x)*s,this.y=t.y+(h.y-t.y)*s,this.z=t.z+(h.z-t.z)*s,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,h){const s=t.x,n=t.y,i=t.z,u=h.x,o=h.y,l=h.z;return this.x=n*l-i*o,this.y=i*u-s*l,this.z=s*o-n*u,this}projectOnVector(t){const h=t.lengthSq();if(h===0)return this.set(0,0,0);const s=t.dot(this)/h;return this.copy(t).multiplyScalar(s)}projectOnPlane(t){return b.copy(this).projectOnVector(t),this.sub(b)}reflect(t){return this.sub(b.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const h=Math.sqrt(this.lengthSq()*t.lengthSq());if(h===0)return Math.PI/2;const s=this.dot(t)/h;return Math.acos(E(s,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const h=this.x-t.x,s=this.y-t.y,n=this.z-t.z;return h*h+s*s+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,h,s){const n=Math.sin(h)*t;return this.x=n*Math.sin(s),this.y=Math.cos(h)*t,this.z=n*Math.cos(s),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,h,s){return this.x=t*Math.sin(h),this.y=s,this.z=t*Math.cos(h),this}setFromMatrixPosition(t){const h=t.elements;return this.x=h[12],this.y=h[13],this.z=h[14],this}setFromMatrixScale(t){const h=this.setFromMatrixColumn(t,0).length(),s=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=h,this.y=s,this.z=n,this}setFromMatrixColumn(t,h){return this.fromArray(t.elements,h*4)}setFromMatrix3Column(t,h){return this.fromArray(t.elements,h*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,h=0){return this.x=t[h],this.y=t[h+1],this.z=t[h+2],this}toArray(t=[],h=0){return t[h]=this.x,t[h+1]=this.y,t[h+2]=this.z,t}fromBufferAttribute(t,h){return this.x=t.getX(h),this.y=t.getY(h),this.z=t.getZ(h),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,h=Math.random()*Math.PI*2,s=Math.sqrt(1-t**2);return this.x=s*Math.cos(h),this.y=s*Math.sin(h),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const b=new S,q=new A;typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:k}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=k),self.onmessage=function(g){const t=T(g.data);self.postMessage(t)};function T({particleCount:g,particlesData:t,particlePositions:h,cursorPointerRef:s,maxConnections:n,minDistance:i,positions:u,colors:o}){const l=new S,r=10/2;let e=0,x=0,a=0;for(let y=0;y<g;y++){const c=t[y];if(l.set(h[y*3],h[y*3+1],h[y*3+2]).add(c.velocity).setLength(10),h[y*3]=l.x,h[y*3+1]=l.y,h[y*3+2]=l.z,y===1&&(h[3]=s.x,h[4]=s.y,h[5]=s.z),(h[y*3+1]<-r||h[y*3+1]>r)&&(c.velocity.y=-c.velocity.y),(h[y*3]<-r||h[y*3]>r)&&(c.velocity.x=-c.velocity.x),(h[y*3+2]<-r||h[y*3+2]>r)&&(c.velocity.z=-c.velocity.z),!(c.numConnections>=n))for(let z=y+1;z<g;z++){const d=t[z];if(d.numConnections>=n)continue;z===1&&(h[z*3]=s.x,h[z*3+1]=s.y,h[z*3+2]=s.z);const C=h[y*3]-h[z*3],p=h[y*3+1]-h[z*3+1];let w=h[y*3+2]-h[z*3+2];y===1&&s.x&&(w=0);const M=Math.sqrt(C*C+p*p+w*w);if(M<i){c.numConnections++,d.numConnections++;const m=1-M/i;u[e++]=h[y*3],u[e++]=h[y*3+1],u[e++]=h[y*3+2],u[e++]=h[z*3],u[e++]=h[z*3+1],u[e++]=h[z*3+2],o[x++]=m,o[x++]=m,o[x++]=m,o[x++]=m,o[x++]=m,o[x++]=m,a++}}}return{numConnected:a,positions:u,colors:o,particlePositions:h,particlesData:t}}})();
